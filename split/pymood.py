#!/usr/bin/env python
#
# Cedric Gaspoz, HES-SO//Arc, 2013
#
# This script is indented to create feedback files for every students of a group, based on the grading sheet
# generated by Moodle and a set of feedback files named after the group name as labelled in the grading sheet.
# In order to run the script, you need, in the same folder, the CSV grading sheet and a feedback file for each group
# in the grading sheet (name of file should correspond to the name of the group in the grading sheet).
#
import sys
import os
import csv
import shutil
import zipfile


path = os.getcwd()
directory = "feedbacks"
file_prefix = "Feedback"
csv_file = ""

# We check the file_prefix
try:
    file_prefix = sys.argv[1]
except IndexError:
    print "You can specify a file prefix that will be applied to the filename. The command is:"
    print "  pymood.py <file_prefix>"
    print "We will now use the default file_prefix: '%s'\n" % file_prefix

# We create the directory if it doesn't exist
if not os.path.exists(os.path.join(path, directory)):
    os.makedirs(os.path.join(path, directory))

# We need to find the csv file in the path. We assume that there is only one csv file in the path.
for root, dirs, files in os.walk(path):
    for filename in files:
        if filename.endswith(".csv"):
            csv_file = filename

# We open the csv and copy the feedback files in the destination directory
if csv_file:
    print "CSV file found: %s\n" % csv_file
    i = open(csv_file)
    input_file = csv.DictReader(i)
    f = open('out.csv', 'wb')
    
    #output_file = csv.DictWriter(f, fieldnames=["Identifier","Full name","Status","Group","Group submission status","Grade","Maximum Grade","Last modified (submission)","Last modified (grade)","Feedback comments"])
    #output_file = csv.DictWriter(f, fieldnames=["Identifier","Full name","Group","Group submission status","Grade","Maximum Grade","Last modified (grade)","Feedback comments"])
    output_file = csv.DictWriter(f, fieldnames=["Identifier","Full name","Status","Group","Grade","Maximum Grade","Grade can be changed","Last modified (grade)","Feedback comments"])

    
    output_file.writeheader()

    points = {}
    #file has to contain grade overrides by group 'A03': 0.3, 'A04': 0.5
    inf = open('points.txt','r')
    fcomments = open('comments.txt','r')
    
    if inf:
        points = eval('{' + inf.read() + '}')
        inf.close()
    
    comments = {}
    if fcomments:
        comments = eval('{' + fcomments.read() + '}')
        fcomments.close()    
    
    with zipfile.ZipFile('upload.zip', 'w') as myzip:    
        for row in input_file:
            moodle_id = row['Identifier'][11:]
            moodle_group = row['Group']
            #print "Etudiant %s dans groupe %s" % (moodle_id, moodle_group)
            source_file = "%s.pdf" % moodle_group
            dest_file = "%s_%s_assignsubmission_file_%s-%s.pdf" % (moodle_group, moodle_id, file_prefix, moodle_group)
            try:
                dest = os.path.join(path, directory, dest_file)
                shutil.copy2(source_file, dest)
                myzip.write(dest, dest_file)
                row['Grade'] =  points[row['Group']] if row['Group'] in points else 1
                if row['Group'] in comments:
                    row["Feedback comments"] = comments[row['Group']]
            except IOError:
                print "The '%s' file is missing for the student %s (%s)" % (source_file, row['Full name'], moodle_id)
            finally:
                output_file.writerow(row)
    i.close()
    f.close()
else:
    print "No CSV file found! Check if you placed the CSV file in the directory: %s" % path
